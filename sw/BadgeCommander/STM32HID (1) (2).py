import hid
import time
import math

vendor_id = 1155
product_id = 22352

def get_hid_device():
    for device_dict in hid.enumerate():
        keys = list(device_dict.keys())
        keys.sort()
        for key in keys:
            print("%s : %s" % (key, device_dict[key]))
        print()
        
    global device
    device = hid.device()
    device.open(vendor_id, product_id)

# Set ShowName App Name
def set_name(name):
    if name == 4:
        addr = 536870936
        datatosend = [0,4] + list(addr.to_bytes(4, 'little'))
        content = list(int(126).to_bytes(4, 'little'))
        datatosend += content + [1]
        print(datatosend)
        send_command(datatosend)
        return
    elif name == 5:
        addr = 536870936
        datatosend = [0,5] + list(addr.to_bytes(4, 'little')) + [1]+[0]*2
        print(datatosend)
        send_command(datatosend)
        print(device.read(8))
        return
    elif name != '':
        datatosend = [0x00]*17
        datatosend[0] = 0x01
        datatosend[1:len(name)+1] = [ord(c) for c in name]
        print(datatosend)
        send_command(datatosend)
        return
    send_command([0x00, 2]) # erase
    tmp = device.read(8) # wait for erase finish
    # if tmp[2] != 0xFF:
    #     print("ERROR")
    #     return
    # datatosend = [3, 6, 14, 255, 100, 254, 8, 44, 
    #               0, 255, 50, 23, 8, 21, 16, 12, 
    #               17, 4, 15, 255, 50, 40, 255, 75, 82, 254, 1, 6, 0, 6, 4, 23, 44, 254, 2, 55, 0, 44, 56, 7, 8, 25, 56, 17, 24, 15, 15, 44, 254, 2, 54, 0, 254, 2, 54, 0, 44, 254, 2, 8, 0, 254, 2, 18, 0, 254, 2, 9, 0, 40, 254, 2, 11, 0, 8, 15, 15, 18, 44, 254, 2, 26, 0, 18, 21, 15, 7, 254, 2, 30, 0, 40, 255, 5, 46, 255, 5, 40, 255, 5, 40, 255, 5, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 254, 2, 45, 0, 55, 45, 45, 45, 45, 45, 45, 45, 55, 55, 254, 2, 45, 0, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 54, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 55, 45, 254, 2, 52, 0, 52, 52, 52, 254, 2, 52, 0, 45, 45, 55, 55, 54, 54, 254, 2, 45, 0, 56, 44, 56, 52, 45, 54, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 54, 44, 44, 49, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 44, 44, 44, 44, 44, 55, 254, 2, 51, 0, 254, 2, 52, 0, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 56, 254, 2, 51, 0, 56, 44, 44, 56, 52, 49, 44, 44, 49, 44, 44, 44, 44, 44, 54, 254, 2, 45, 0, 55, 55, 55, 54, 44, 44, 52, 55, 44, 254, 2, 49, 0, 44, 44, 254, 2, 49, 0, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 44, 44, 44, 44, 56, 44, 44, 44, 44, 44, 44, 44, 54, 45, 45, 45, 45, 56, 254, 2, 51, 0, 56, 44, 44, 56, 52, 49, 44, 254, 2, 45, 0, 49, 254, 2, 50, 0, 52, 254, 2, 45, 0, 45, 254, 2, 52, 0, 52, 44, 44, 44, 44, 44, 254, 2, 45, 0, 51, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 44, 44, 44, 52, 44, 44, 44, 44, 44, 44, 56, 44, 56, 52, 254, 2, 52, 0, 254, 2, 52, 0, 254, 2, 52, 0, 52, 49, 44, 49, 44, 49, 55, 254, 2, 50, 0, 52, 254, 2, 45, 0, 45, 52, 44, 44, 44, 44, 44, 44, 54, 45, 254, 2, 52, 0, 52, 56, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 44, 44, 254, 2, 49, 0, 44, 44, 44, 44, 44, 44, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 44, 39, 44, 44, 44, 44, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 55, 45, 52, 44, 44, 44, 44, 44, 44, 54, 56, 52, 44, 44, 56, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 44, 254, 2, 49, 0, 44, 44, 44, 44, 54, 55, 55, 49, 44, 49, 44, 44, 44, 44, 44, 54, 55, 45, 254, 2, 52, 0, 52, 44, 44, 44, 44, 44, 44, 44, 54, 56, 52, 44, 44, 44, 44, 56, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 51, 44, 44, 44, 44, 254, 2, 51, 0, 44, 44, 44, 44, 52, 56, 52, 254, 2, 52, 0, 254, 2, 52, 0, 49, 52, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 54, 56, 45, 45, 46, 46, 54, 56, 45, 45, 45, 45, 45, 54, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 254, 2, 49, 0, 44, 44, 44, 44, 52, 45, 55, 55, 55, 254, 2, 49, 0, 44, 44, 44, 44, 44, 44, 44, 44, 45, 55, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 45, 254, 2, 29, 0, 254, 2, 51, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 13, 0, 55, 55, 55, 45, 45, 45, 51, 255, 5, 40, 255, 5, 74, 255, 5, 44, 44, 254, 2, 51, 0, 44, 44, 44, 44, 44, 44, 44, 44, 44, 52, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 254, 2, 45, 0, 45, 52, 255, 5, 40, 255, 5, 74, 255, 5, 44, 254, 2, 45, 0, 254, 2, 15, 0, 254, 2, 45, 0, 44, 44, 254, 2, 45, 0, 44, 44, 44, 44, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 44, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 44, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 44, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 44, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 45, 45, 254, 2, 52, 0, 52, 255, 5, 40, 255, 5, 74, 255, 5, 254, 2, 49, 0, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 44, 44, 254, 2, 49, 0, 254, 2, 45, 0, 44, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 49, 0, 44, 254, 2, 45, 0, 44, 49, 254, 2, 49, 0, 44, 254, 2, 45, 0, 44, 49, 254, 2, 49, 0, 44, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 49, 0, 44, 254, 2, 45, 0, 44, 49, 255, 5, 40, 255, 5, 74, 255, 5, 254, 2, 49, 0, 44, 254, 2, 45, 0, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 45, 0, 44, 44, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 44, 254, 2, 45, 0, 56, 254, 2, 49, 0, 44, 44, 254, 2,
    # 45, 0, 56, 254, 2, 49, 0, 44, 254, 2, 45, 0, 254, 2, 49, 0, 44, 254, 2, 49, 0, 44, 44, 44, 56, 255, 5, 40, 255, 5, 74, 255, 5, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 49, 0, 44, 44, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 49, 0, 44, 44, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 49, 0, 44, 44, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 49, 0, 254, 2, 45, 0, 254, 2, 49, 0, 254, 2, 45, 0, 49, 255, 5, 40, 255, 5, 74, 255, 5, 40, 255, 5, 254, 2, 9, 0, 15, 12, 19, 19, 8, 21, 44, 254, 2, 29, 0, 8, 21, 18, 44, 254, 2, 5, 0, 4, 7, 254, 2, 24, 0, 254, 2, 22, 0, 254, 2, 5, 0, 44, 9, 8, 4, 23, 24, 21, 8, 44, 12, 22, 44, 6, 18, 16, 19, 4, 23, 12, 5, 15, 8, 44, 26, 12, 23, 11, 44, 254, 2, 24, 0, 254, 2, 22, 0, 254, 2, 5, 0, 44, 254, 2, 21, 0, 24, 5, 5, 8, 21, 44, 254, 2, 7, 0, 24, 6, 14, 28, 44, 22, 6, 21, 12, 19, 23, 44, 9, 18, 21, 16, 4, 23, 255, 5, 40, 255, 5, 254, 2, 16, 0, 18, 21, 8, 44, 12, 17, 9, 18, 21, 16, 4, 23, 12, 18, 17, 44, 4, 5, 18, 24, 23, 44, 22, 6, 21, 12, 19, 23, 44, 22, 28, 17, 23, 4, 27, 44, 6, 4, 17, 44, 5, 8, 44, 9, 18, 24, 17, 7, 44, 11, 8, 21, 8, 254, 2, 51, 0, 255, 5, 40, 255, 5, 11, 23, 23, 19, 22, 254, 2, 51, 0, 56, 56, 10, 12, 23, 11, 24, 5, 55, 6, 18, 16, 56, 9, 15, 12, 19, 19, 8, 21, 7, 8, 25, 12, 6, 8, 22, 56, 9, 15, 12, 19, 19, 8, 21, 29, 8, 21, 18, 45, 9, 12, 21, 16, 26, 4, 21, 8, 56, 5, 15, 18, 5, 56, 7, 8, 25, 56, 7, 18, 6, 24, 16, 8, 17, 23, 4, 23, 12, 18, 17, 56, 9, 12, 15, 8, 254, 2, 45, 0, 9, 18, 21, 16, 4, 23, 22, 56, 254, 2, 5, 0, 4, 7, 254, 2, 24, 0, 22, 5, 254, 2, 22, 0, 6, 21, 12, 19, 
    # 23, 254, 2, 9, 0, 18, 21, 16, 4, 23, 55, 16, 7, 255, 5, 40, 255, 5, 254, 2, 8, 0, 254, 2, 18, 0, 254, 2, 9, 0, 255, 5, 40, 253, 0, 0, 0, 0, 0, 0, 0]
    datatosend = [3, 0, 46, 254, 2, 11, 0, 255, 2, 8, 255, 2, 15, 255, 2, 15, 255, 2, 18, 255, 2, 44, 255, 2, 254, 2, 26, 0, 255, 2, 18, 255, 2, 21, 255, 2, 15, 255, 2, 7, 255, 2, 254, 2, 30, 0, 255, 2, 253]
    print(len(datatosend))
    for i in range(0, math.ceil(len(datatosend)), 8):
        print(datatosend[i: i+8])
        if datatosend[i] == 0:
            datatosend[i] = 0xFC
            print(datatosend[i: i+8])
        send_command(datatosend[i: i+8])
        if len(datatosend) - 8 != i:
            device.read(8) # wait for response
    



#BadUSB Commands
#Clear BadUSB
def clear_badusb():
    send_command([0x02])
    
#Send BadUSB Script
def send_badusb_script(script):
    datatosend = [0x00]*3
    datatosend[0] = 0x03
    datatosend[1:2] = len(script)
    send_command(datatosend + script)

def send_command(command):
    device.write(command)
    

def close_device():
    device.close()


if __name__ == '__main__':
    get_hid_device()
    # set_name("TAT")
    #set_name('')
    #set_name(4) # write mem
    set_name(5) # read mem

